package com.inventory.Salles;

import com.inventory.Database.ConnectionFactory;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author deidine
 */
//this class is for when the client want to pay his debit it just give the mony and will have two table and button 
//frist table show all his taken and the other will have the new payement so after that you have to delete from database
public final class PayLoanTest extends javax.swing.JDialog {

    Connection conn = null;
    PreparedStatement prepStatement = null;
    Statement statement = null;
    ResultSet resultSet = null;
    private Object[] data;

    /**
     * Creates new form PayLoanTest
     * @param data
     */
    public PayLoanTest(Object[] data) {
        try {
            conn = new ConnectionFactory().getConn();
            statement = conn.createStatement();
        } catch (SQLException e) {
            e.printStackTrace();
        }

        this.data = data;
        initComponents();
        loadDataSet();
        loanTable();

        totalPaye();
        getCustemr();
        setLocationRelativeTo(null);
        setResizable(false);
        setModal(true);
        setVisible(true);
        setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        payTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        loanTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnAll = new javax.swing.JButton();
        btnDelAll = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtNumbre = new javax.swing.JTextField();
        btnEntrer = new javax.swing.JButton();
        btnPay = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtSumPayDebit = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        btnEntrer1 = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        codeText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        phoneText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        locationText = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        payTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        payTable.setModel(new javax.swing.table.DefaultTableModel(
        ) );
        jScrollPane2.setViewportView(payTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        loanTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        loanTable.setModel(new javax.swing.table.DefaultTableModel()
        );
        jScrollPane1.setViewportView(loanTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        btnAll.setBackground(new java.awt.Color(153, 153, 255));
        btnAll.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAll.setForeground(new java.awt.Color(255, 255, 153));
        btnAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logout.png"))); // NOI18N
        btnAll.setText("Entrer tous ");
        btnAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllActionPerformed(evt);
            }
        });

        btnDelAll.setBackground(new java.awt.Color(153, 51, 255));
        btnDelAll.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelAll.setForeground(new java.awt.Color(255, 255, 51));
        btnDelAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logout2.png"))); // NOI18N
        btnDelAll.setText("Enlever Tous");
        btnDelAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelAllActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(153, 51, 255));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 51));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logout2.png"))); // NOI18N
        btnDelete.setText("Enlever 1");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtNumbre.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        txtNumbre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNumbre.setText("1");
        txtNumbre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumbreKeyTyped(evt);
            }
        });

        btnEntrer.setBackground(new java.awt.Color(204, 153, 255));
        btnEntrer.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEntrer.setForeground(new java.awt.Color(255, 255, 51));
        btnEntrer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logout.png"))); // NOI18N
        btnEntrer.setText("Entrer 1");
        btnEntrer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEntrerMouseEntered(evt);
            }
        });
        btnEntrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrerActionPerformed(evt);
            }
        });

        btnPay.setBackground(new java.awt.Color(51, 51, 0));
        btnPay.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPay.setForeground(new java.awt.Color(255, 255, 255));
        btnPay.setText("Payer");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Total impeyee");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Somme Recu");

        txtSumPayDebit.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        txtSumPayDebit.setForeground(new java.awt.Color(4, 0, 0));
        txtSumPayDebit.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSumPayDebit.setText("0");
        txtSumPayDebit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSumPayDebitActionPerformed(evt);
            }
        });

        txtTotal.setEditable(false);
        txtTotal.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(4, 0, 0));
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotal.setText("0");
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        btnEntrer1.setBackground(new java.awt.Color(204, 153, 255));
        btnEntrer1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEntrer1.setForeground(new java.awt.Color(255, 255, 51));
        btnEntrer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/logout.png"))); // NOI18N
        btnEntrer1.setText("Entrer 1");
        btnEntrer1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEntrer1MouseEntered(evt);
            }
        });
        btnEntrer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrer1ActionPerformed(evt);
            }
        });

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/money.png")));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSumPayDebit)
                    .addComponent(btnDelAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(btnAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator4)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnEntrer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20))
                    .addComponent(txtNumbre)
                    .addComponent(txtTotal, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEntrer1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNumbre, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEntrer, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnEntrer1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnAll, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnDelAll, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txtSumPayDebit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(0, 255, 255));

        codeText.setEditable(false);
        codeText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        codeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeTextActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel2.setText(" Code du client:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel5.setText("Num Telephone:");

        phoneText.setEditable(false);
        phoneText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        phoneText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTextActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel3.setText("Nom Complete:");

        nameText.setEditable(false);
        nameText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel4.setText("Lieux Habitation:");

        locationText.setEditable(false);
        locationText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(codeText, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(locationText, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDelAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelAllActionPerformed
        DeleteAllDataPay();
        totalValue();

        // TODO add your handling code here:
    }//GEN-LAST:event_btnDelAllActionPerformed

    private void btnEntrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrerActionPerformed
        String num = txtNumbre.getText();
        int nmb = Integer.parseInt(num);
        DefaultTableModel listLoans = (DefaultTableModel) loanTable.getModel();
        int rowCount = listLoans.getRowCount();
        if (nmb <= rowCount) {
            pushNmbreDataPay(nmb);
            totalValue();

        } else {
            System.out.println("dir");
        }

// TODO add your handling code here:
    }//GEN-LAST:event_btnEntrerActionPerformed

    private void btnAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllActionPerformed
        pushAllDataPay();
        totalValue();
// TODO add your handling code here:
    }//GEN-LAST:event_btnAllActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        redoDataPay();
        totalValue();
// TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        delteLoan();
        insertPayLoan();
        txtSumPayDebit.requestFocus();

        txtSumPayDebit.setSelectionStart(0);
        txtSumPayDebit.setSelectionEnd(txtSumPayDebit.getText().length());
// TODO add your handling code here:
    }//GEN-LAST:event_btnPayActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtSumPayDebitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSumPayDebitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSumPayDebitActionPerformed

    private void txtNumbreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumbreKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)) && !(c == KeyEvent.VK_BACK_SPACE)) {
            JOptionPane.showMessageDialog(null, "il vaut entrer les nombre seulement", "Ilegal Input",
                    JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }

// TODO add your handling code here:
    }//GEN-LAST:event_txtNumbreKeyTyped

    private void btnEntrerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEntrerMouseEntered
        String num = txtNumbre.getText();
        btnEntrer.setText("Entrer " + num);     // TODO add your handling code here:
    }//GEN-LAST:event_btnEntrerMouseEntered

    private void codeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeTextActionPerformed

    private void phoneTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneTextActionPerformed

    private void btnEntrer1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEntrer1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEntrer1MouseEntered

    private void btnEntrer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrer1ActionPerformed
        push1DataPay();
        totalValue();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEntrer1ActionPerformed
    private void loanTable() {
        DefaultTableModel listpays = (DefaultTableModel) payTable.getModel();

        listpays.addColumn("idVende");
        listpays.addColumn("code produit");
        listpays.addColumn("quentite");
        listpays.addColumn("idDetail");
        listpays.addColumn("pix de vende");

        try {
            String tampilBarang = "SELECT `salesid`, `date`, `customercode`, `total_paye`, "
                    + "`recu`, `changeMony`, `soldby`,"
                    + " `productcode`, `quantity`, `isLoan`, `detaild`, `sellprice` FROM salledata where isLoan='true' "
                    + "and customercode='" + codeText.getText() + "'";

            resultSet = statement.executeQuery(tampilBarang);

            DefaultTableModel laporan = new DefaultTableModel();
            laporan.addColumn("id");
            laporan.addColumn("code produit");
            laporan.addColumn("quentite");
            laporan.addColumn("idDetail");
            laporan.addColumn("prix vente");

            laporan.getDataVector().removeAllElements();
            laporan.fireTableDataChanged();
            laporan.setRowCount(0);

            while (resultSet.next()) {
                laporan.addRow(new Object[]{
                    resultSet.getString("salesid"),
                    resultSet.getString("productcode"),
                    resultSet.getString("quantity"),
                    resultSet.getString("detaild"),
                    resultSet.getString("sellprice"),});
                loanTable.setModel(laporan);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "cek Kembali " + e + "");
        }
    }

    void DeleteAllDataPay() {

        DefaultTableModel listpays = (DefaultTableModel) payTable.getModel();
        DefaultTableModel listLoans = (DefaultTableModel) loanTable.getModel();
        for (int i = 0; i < listpays.getRowCount(); i++) {

            Object[] rows = {
                listpays.getValueAt(i, 0).toString(),
                listpays.getValueAt(i, 1).toString(),
                listpays.getValueAt(i, 2).toString(),
                listpays.getValueAt(i, 3).toString(),
                listpays.getValueAt(i, 4).toString(),};
            // data.add(rows);
            listLoans.addRow(rows);

        }
        listpays.setRowCount(0);
    }

    void pushAllDataPay() {

        DefaultTableModel listpays = (DefaultTableModel) payTable.getModel();
        DefaultTableModel listLoans = (DefaultTableModel) loanTable.getModel();
        for (int i = 0; i < listLoans.getRowCount(); i++) {

            Object[] rows = {
                listLoans.getValueAt(i, 0).toString(),
                listLoans.getValueAt(i, 1).toString(),
                listLoans.getValueAt(i, 2).toString(),
                listLoans.getValueAt(i, 3).toString(),
                listLoans.getValueAt(i, 4).toString(),};
            // data.add(rows);
            listpays.addRow(rows);

        }
        listLoans.setRowCount(0);
    }

    void pushNmbreDataPay(int numbre) {
        DefaultTableModel listpays = (DefaultTableModel) payTable.getModel();
        DefaultTableModel listLoans = (DefaultTableModel) loanTable.getModel();
        for (int i = 0; i < numbre; i++) {

            Object[] rows = {
                listLoans.getValueAt(i, 0).toString(),
                listLoans.getValueAt(i, 1).toString(),
                listLoans.getValueAt(i, 2).toString(),
                listLoans.getValueAt(i, 3).toString(),
                listLoans.getValueAt(i, 4).toString()
            };
            // data.add(rows);
            listpays.addRow(rows);
            listLoans.removeRow(i);
        }

    }

    void redoDataPay() {
        DefaultTableModel listpays = (DefaultTableModel) payTable.getModel();
        DefaultTableModel listLoans = (DefaultTableModel) loanTable.getModel();

        if (payTable.getSelectedRowCount() != 0) {

            Object[] rows = {
                listpays.getValueAt(payTable.getSelectedRow(), 0).toString(),
                listpays.getValueAt(payTable.getSelectedRow(), 1).toString(),
                listpays.getValueAt(payTable.getSelectedRow(), 2).toString(),
                listpays.getValueAt(payTable.getSelectedRow(), 3).toString(),
                listpays.getValueAt(payTable.getSelectedRow(), 4).toString(),};

            listLoans.addRow(rows);
            listpays.removeRow(payTable.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(this, "Le Table est null ou aucun line a ete selectionner.");

        }
    }

    void push1DataPay() {
        DefaultTableModel listpays = (DefaultTableModel) payTable.getModel();
        DefaultTableModel listLoans = (DefaultTableModel) loanTable.getModel();

        if (loanTable.getSelectedRowCount() != 0) {

            Object[] rows = {
                listLoans.getValueAt(loanTable.getSelectedRow(), 0).toString(),
                listLoans.getValueAt(loanTable.getSelectedRow(), 1).toString(),
                listLoans.getValueAt(loanTable.getSelectedRow(), 2).toString(),
                listLoans.getValueAt(loanTable.getSelectedRow(), 3).toString(),
                listLoans.getValueAt(loanTable.getSelectedRow(), 4).toString(),};

            listpays.addRow(rows);
            listLoans.removeRow(loanTable.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(this, "Le Table est null ou aucun line a ete selectionner.");

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAll;
    private javax.swing.JButton btnDelAll;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEntrer;
    private javax.swing.JButton btnEntrer1;
    private javax.swing.JButton btnPay;
    private javax.swing.JTextField codeText;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTable loanTable;
    private javax.swing.JTextField locationText;
    private javax.swing.JTextField nameText;
    private javax.swing.JTable payTable;
    private javax.swing.JTextField phoneText;
    private javax.swing.JTextField txtNumbre;
    private javax.swing.JTextField txtSumPayDebit;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    public void clear() {
        DefaultTableModel listSalles = (DefaultTableModel) payTable.getModel();

        listSalles.setRowCount(0);
    }

    public void totalPaye() {
        try {
            String query = "SELECT (total_paye-recu) as total  FROM salesinfo  "
                    //            String query = "SELECT Sum((sellprice*quantity)-recu) as total  FROM salledata  "
                    + "WHERE  customercode='" + codeText.getText() + "'  and  salesid=" + data[0].toString();

            resultSet = statement.executeQuery(query);
            if (resultSet.next()) {
                txtTotal.setText(resultSet.getString("total"));
//                JOptionPane.showMessageDialog(null, "le client exists deja.");
               

            } else {

            }
//                addFunction(customerDTO);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void delteLoan() {
        if (payTable.getRowCount() != 0) {

            for (int i = 0; i < payTable.getRowCount(); i++) {
                //this query will delete from saledetail table if the client pay his debit 

                String query = "DELETE FROM sale_detail WHERE detaild  ='" + payTable.getValueAt(i, 3) + "'";

                //this will check if id stell in saleifo but not in saildetail table so will delete it to not let
                //it stay in houre database and not also show that the clent is not pay his loan or debit 
                try {
                    statement.executeUpdate(query);

                } catch (SQLException ex) {
                    Logger.getLogger(PayLoanTest.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            String query2 = "DELETE FROM salesinfo WHERE salesid NOT IN(SELECT salesid FROM sale_detail) ";

            try {
                statement.executeUpdate(query2);
            } catch (SQLException ex) {
                Logger.getLogger(PayLoanTest.class.getName()).log(Level.SEVERE, null, ex);
            }
            
             try {
                    String query3 = "UPDATE salesinfo SET recu=recu+" + txtSumPayDebit.getText() 
                            + "WHERE  customercode='" + codeText.getText() + "'  and  salesid=" + data[0].toString();

                    prepStatement = conn.prepareStatement(query3);

                    prepStatement.executeUpdate();
                } catch (SQLException throwables) {
                    throwables.printStackTrace();
                }
            totalPaye();
            clear();
        } else {
            JOptionPane.showMessageDialog(this, "Le Table est null.");

        }

    }

    private String getCureentTime() {
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date dates = new Date();

        return dateFormat.format(dates);

    }

    private void insertPayLoan() {

        try {
            String query2 = "INSERT INTO payloan VALUES(null,?,?,?,? )";
            prepStatement = conn.prepareStatement(query2);
            prepStatement.setString(1, codeText.getText());
            prepStatement.setDouble(2, Double.parseDouble(txtSumPayDebit.getText()));
            prepStatement.setString(3, "deidine");

            prepStatement.setString(4, getCureentTime());
            prepStatement.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(PayLoanTest.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void loadDataSet() {
        codeText.setText(data[2].toString());
    }

    public void getCustemr() {
        try {
            String query = "select * FROM customers WHERE customercode='" + codeText.getText() + "'";
            resultSet = statement.executeQuery(query);

            if (resultSet.next()) {
                nameText.setText(resultSet.getString("fullname"));
                locationText.setText(resultSet.getString("location"));
                phoneText.setText(resultSet.getString("phone"));

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    void totalValue() {
        DefaultTableModel listSalles = (DefaultTableModel) payTable.getModel();
        Double totalPaye = 0.0;

        for (int i = 0; i < listSalles.getRowCount(); i++) {
            Double sellPrice = Double.parseDouble(listSalles.getValueAt(i, 4).toString());
            Double totalRevenue = sellPrice ;//* Integer.parseInt(listSalles.getValueAt(i, 2).toString());
            totalPaye = totalPaye + totalRevenue;
            txtSumPayDebit.setText(totalPaye.toString());

        }
        if (payTable.getRowCount() == 0) {
            txtSumPayDebit.setText("0");
        }
    }
}
