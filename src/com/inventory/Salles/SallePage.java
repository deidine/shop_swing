package com.inventory.Salles;

import com.inventory.Combo.ComboItem;
import com.inventory.Combo.ComboListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.inventory.DAO.ProductDAO;
import com.inventory.DAO.UserDAO;
import com.inventory.DTO.ProductDTO;
import com.inventory.UI.Clientform;
import com.inventory.raport.PDFSalleNoTVA;
import com.inventory.raport.PDFSalleTVA;
import com.inventory.tables.ClientTable2;
import com.inventory.tables.ListSalle;
import com.inventory.tables.ProductTable2;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.File;
import java.text.ParseException;
import java.io.IOException;
import com.itextpdf.text.DocumentException;

import com.inventory.raport.PdfSalle;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.net.URISyntaxException;
import java.util.Locale;

/**
 *
 * @author deidine
 */
public final class SallePage extends javax.swing.JFrame {

    String username;
    DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
    boolean valideQuentite = false;
    double currentStock = 0;
    Double moneyToCaisse = 0.0;
    Date dates = new Date();
//    private boolean canLoan;

    ClientTable2 cltb = new ClientTable2();
    ProductTable2 prtbl = new ProductTable2();

    /**
     * Creates new form test2
     *
     * @param username
     */
    public SallePage(String username) {

        initComponents();

        this.username = username;
        loadSearchDataProduct("");
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        vendeur.setText("Vendeur " + this.username);

        setIconImage(new ImageIcon("resources/logo.png").getImage());
        isKnowedCLient();
        isUNKnowedCLient();

        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                if (moneyToCaisse > 0.0) {
                    putMoneyInCaisse();
                    moneyToCaisse = 0.0;

                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel15 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPaneKasirBarang1 = new javax.swing.JScrollPane();
        jTableProduct = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        txtProduct = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPaneKasirBarang = new javax.swing.JScrollPane();
        jTableClient = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        txtClient = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        clientKnow = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        clientUnKnow = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabelListSalle = new javax.swing.JLabel();
        vendeur = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnSalle2 = new javax.swing.JButton();
        btndeleteAll = new javax.swing.JButton();
        btnSalle = new javax.swing.JButton();
        btnModifier = new javax.swing.JButton();
        btnDeleteItem = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        btnCaisse = new javax.swing.JButton();
        TVA = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        txtTotal = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtRendre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtRecu = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        operationType = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        salesTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        sellPanel = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        custCodeText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        prodCodeText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        priceText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        quantityText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel10 = new javax.swing.JPanel();
        addCustButton = new javax.swing.JButton();
        btnEntrer = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        prodNameText = new javax.swing.JTextField();
        jMenuBarInfoPengembang = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuLogout = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        infoAplikasi = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jTableProduct.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        jTableProduct.setForeground(new java.awt.Color(4, 0, 0));
        jTableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableProduct.setIntercellSpacing(new java.awt.Dimension(10, 5));
        jTableProduct.setRowHeight(25);
        jTableProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProductMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTableProductMouseEntered(evt);
            }
        });
        jTableClient.getTableHeader().setReorderingAllowed(false);
        jScrollPaneKasirBarang1.setViewportView(jTableProduct);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png")));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N

        txtProduct.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtProduct.setForeground(new java.awt.Color(4, 0, 0));
        txtProduct.setText("Chercher un produit pour vender");
        txtProduct.setToolTipText("");
        txtProduct.setMargin(new java.awt.Insets(0, 5, 0, 0));
        txtProduct.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtProductFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProductFocusLost(evt);
            }
        });
        txtProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductActionPerformed(evt);
            }
        });
        txtProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProductKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel9.setText("TABLEAU LES PRODUIT");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPaneKasirBarang1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9)
                    .addComponent(txtProduct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneKasirBarang1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        jTableClient.setFont(new java.awt.Font("Sitka Text", 1, 12)); // NOI18N
        jTableClient.setForeground(new java.awt.Color(4, 0, 0));
        jTableClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableClient.setIntercellSpacing(new java.awt.Dimension(10, 5));
        jTableClient.setRowHeight(25);
        jTableClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientMouseClicked(evt);
            }
        });
        jTableClient.getTableHeader().setReorderingAllowed(false);
        jScrollPaneKasirBarang.setViewportView(jTableClient);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png")));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtClient.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtClient.setForeground(new java.awt.Color(4, 0, 0));
        txtClient.setText("Chercher un Client qui va acheter le produit");
        txtClient.setToolTipText("");
        txtClient.setMargin(new java.awt.Insets(0, 5, 0, 0));
        txtClient.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtClientFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtClientFocusLost(evt);
            }
        });
        txtClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClientActionPerformed(evt);
            }
        });
        txtClient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtClientKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe Print", 2, 18)); // NOI18N
        jLabel10.setText("TABLEAUX CLIENTS");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtClient, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtClient, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)))
        );

        jPanel11.setBackground(new java.awt.Color(51, 51, 255));

        clientKnow.setBackground(new java.awt.Color(0, 0, 255));
        clientKnow.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        clientKnow.setForeground(new java.awt.Color(255, 255, 255));
        clientKnow.setText("oui");
        clientKnow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientKnowActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Le Client Est Enregistrer Dans Le System?");

        clientUnKnow.setBackground(new java.awt.Color(0, 0, 255));
        clientUnKnow.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        clientUnKnow.setForeground(new java.awt.Color(255, 255, 255));
        clientUnKnow.setSelected(true);
        clientUnKnow.setText("non");
        clientUnKnow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientUnKnowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(clientKnow, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(clientUnKnow, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(clientKnow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(clientUnKnow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneKasirBarang)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneKasirBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabelListSalle.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabelListSalle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelListSalle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelListSalle.setText("List des Produits Vender"+ getCureentTime());

        vendeur.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        vendeur.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(vendeur, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabelListSalle, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelListSalle, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vendeur))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        btnSalle2.setBackground(new java.awt.Color(153, 0, 153));
        btnSalle2.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        btnSalle2.setForeground(new java.awt.Color(255, 255, 255));
        btnSalle2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/exit.png"))); // NOI18N
        btnSalle2.setText("fermer caisse");
        btnSalle2.setBorderPainted(false);
        btnSalle2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalle2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalle2ActionPerformed(evt);
            }
        });

        btndeleteAll.setBackground(new java.awt.Color(255, 0, 0));
        btndeleteAll.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btndeleteAll.setForeground(new java.awt.Color(255, 255, 255));
        btndeleteAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/recycle-bin.png"))); // NOI18N
        btndeleteAll.setText("effacer tous");
        btndeleteAll.setBorderPainted(false);
        btndeleteAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btndeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteAllActionPerformed(evt);
            }
        });

        btnSalle.setBackground(new java.awt.Color(153, 0, 153));
        btnSalle.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnSalle.setForeground(new java.awt.Color(255, 255, 255));
        btnSalle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/ok.png"))); // NOI18N
        btnSalle.setText("Terminer");
        btnSalle.setBorderPainted(false);
        btnSalle.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalle.setEnabled(false);
        btnSalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalleActionPerformed(evt);
            }
        });

        btnModifier.setBackground(new java.awt.Color(204, 153, 0));
        btnModifier.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnModifier.setForeground(new java.awt.Color(255, 255, 255));
        btnModifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/update-arrow.png"))); // NOI18N
        btnModifier.setText("Modifiee");
        btnModifier.setBorderPainted(false);
        btnModifier.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });

        btnDeleteItem.setBackground(new java.awt.Color(153, 153, 0));
        btnDeleteItem.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        btnDeleteItem.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/removeproduct.png"))); // NOI18N
        btnDeleteItem.setText("Suprmer un ligne");
        btnDeleteItem.setBorderPainted(false);
        btnDeleteItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteItemActionPerformed(evt);
            }
        });

        jPanel14.setForeground(new java.awt.Color(0, 204, 153));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );

        btnCaisse.setBackground(new java.awt.Color(153, 0, 153));
        btnCaisse.setFont(new java.awt.Font("Tw Cen MT", 1, 14)); // NOI18N
        btnCaisse.setForeground(new java.awt.Color(255, 255, 255));
        btnCaisse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/save.png"))); // NOI18N
        btnCaisse.setText("afficher plus information");
        btnCaisse.setBorderPainted(false);
        btnCaisse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCaisse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaisseActionPerformed(evt);
            }
        });

        TVA.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        TVA.setForeground(new java.awt.Color(255, 255, 255));
        TVA.setText("TVA");
        TVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TVAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnSalle2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCaisse, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btndeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteItem)
                .addGap(18, 18, 18)
                .addComponent(btnSalle, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TVA)
                .addGap(17, 17, 17))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btndeleteAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
            .addComponent(btnModifier, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnDeleteItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnSalle2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnCaisse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TVA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(btnSalle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));

        txtTotal.setEditable(false);
        txtTotal.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(4, 0, 0));
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotal.setText("0");
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Total a payee");

        txtRendre.setEditable(false);
        txtRendre.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        txtRendre.setForeground(new java.awt.Color(4, 0, 0));
        txtRendre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRendre.setText("0");
        txtRendre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRendreActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Total A Rendre");

        txtRecu.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        txtRecu.setForeground(new java.awt.Color(4, 0, 0));
        txtRecu.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRecu.setText("0");
        txtRecu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRecuKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRecuKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Total Recu");

        //operationType.setRenderer(new ComboRenderer());
        operationType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operationTypeActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Type De L'operation");

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/money.png")));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRecu, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtRendre)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                    .addComponent(operationType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRendre, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRecu, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(operationType))
        );

        salesTable.setFont(new java.awt.Font("Sitka Text", 1, 12)); // NOI18N
        salesTable.setModel(new ListSalle());
        salesTable.setIntercellSpacing(new java.awt.Dimension(10, 5));
        salesTable.setRowHeight(25);
        salesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(salesTable);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        sellPanel.setBackground(new java.awt.Color(0, 102, 102));

        jPanel12.setBackground(new java.awt.Color(0, 102, 102));

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("code client");

        custCodeText.setEditable(false);
        custCodeText.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        custCodeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custCodeTextActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Code prod:");

        prodCodeText.setEditable(false);
        prodCodeText.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        prodCodeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodCodeTextActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(0, 102, 102));
        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Prix De Vente:");

        priceText.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        priceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTextActionPerformed(evt);
            }
        });
        priceText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceTextKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Quantity:");

        quantityText.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        quantityText.setText("1");
        quantityText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTextActionPerformed(evt);
            }
        });
        quantityText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quantityTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quantityTextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quantityTextKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Date:");

        Locale locale = new Locale("fr", "london");
        jDateChooser1.setLocale(locale);
        jDateChooser1.setDate(dates);
        //jDateChooser1.setDate(getCureentTime());

        addCustButton.setBackground(new java.awt.Color(204, 153, 0));
        addCustButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addCustButton.setForeground(new java.awt.Color(255, 255, 255));
        addCustButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/user.png"))); // NOI18N
        addCustButton.setText("Nouvelle Client");
        addCustButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addCustButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustButtonActionPerformed(evt);
            }
        });

        btnEntrer.setBackground(new java.awt.Color(51, 255, 51));
        btnEntrer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEntrer.setForeground(new java.awt.Color(255, 255, 255));
        btnEntrer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/list.png"))); // NOI18N
        btnEntrer.setText("ENTRER DANS ");
        btnEntrer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEntrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrerActionPerformed(evt);
            }
        });
        btnEntrer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnEntrerKeyPressed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(255, 0, 0));
        clearButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clearButton.setForeground(new java.awt.Color(255, 255, 255));
        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/update-arrow.png"))); // NOI18N
        clearButton.setText("initialiser");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addCustButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEntrer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addCustButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(btnEntrer, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel6)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(prodCodeText, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(quantityText, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(priceText, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(custCodeText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(custCodeText, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(prodCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(priceText, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(quantityText, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        jPanel18.setBackground(new java.awt.Color(102, 102, 0));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("ENTRER LA QUANTITE DU PRODUIT VENDER PUI CLIQUE ENTRER DANS ");

        prodNameText.setEditable(false);
        prodNameText.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        prodNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodNameTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(prodNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prodNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout sellPanelLayout = new javax.swing.GroupLayout(sellPanel);
        sellPanel.setLayout(sellPanelLayout);
        sellPanelLayout.setHorizontalGroup(
            sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sellPanelLayout.createSequentialGroup()
                .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(sellPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        sellPanelLayout.setVerticalGroup(
            sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sellPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sellPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sellPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel15);

        jMenu1.setText("File");

        jMenuLogout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuLogout.setText("Log Out");
        jMenuLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuLogoutActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuLogout);

        jMenuBarInfoPengembang.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItem1.setText("Info Pengembang");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        infoAplikasi.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_DOWN_MASK));
        infoAplikasi.setText("Info Aplikasi");
        infoAplikasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoAplikasiActionPerformed(evt);
            }
        });
        jMenu2.add(infoAplikasi);

        jMenuBarInfoPengembang.add(jMenu2);

        setJMenuBar(jMenuBarInfoPengembang);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1227, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clientKnowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientKnowActionPerformed
        isKnowedCLient();
        // TODO add your handling code here:
    }//GEN-LAST:event_clientKnowActionPerformed

    private void clientUnKnowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientUnKnowActionPerformed
        isUNKnowedCLient();  // TODO add your handling code here:
    }//GEN-LAST:event_clientUnKnowActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtRendreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRendreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRendreActionPerformed

    private void txtRecuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRecuKeyReleased
        Double totalPaye = Double.valueOf(txtTotal.getText());
        Double totalRecu = Double.valueOf(txtRecu.getText());
        if (totalRecu >= totalPaye) {
            txtRendre.setText("" + (totalRecu - totalPaye) + "");

        } else {
            txtRendre.setText("0");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRecuKeyReleased

    private void txtRecuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRecuKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)) && !(c == KeyEvent.VK_BACK_SPACE)) {
            JOptionPane.showMessageDialog(null, "il vaut entrer les nombre seulement", "Ilegal Input",
                    JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }    // TODO add your handling code here:
    }//GEN-LAST:event_txtRecuKeyTyped

    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
        if (salesTable.getSelectedRow() >= 0) {
            DefaultTableModel listSalles = (DefaultTableModel) salesTable.getModel();
            setProductTable();
            custCodeText.setText(listSalles.getValueAt(salesTable.getSelectedRow(), 0).toString());
            prodCodeText.setText(listSalles.getValueAt(salesTable.getSelectedRow(), 1).toString());
            jDateChooser1.setDate(dates);
            // jDateChooser1.setDate((Date) listSalles.getValueAt(i, 4));
            priceText.setText(listSalles.getValueAt(salesTable.getSelectedRow(), 2).toString());
            quantityText.setText(listSalles.getValueAt(salesTable.getSelectedRow(), 3).toString());

            listSalles.removeRow(salesTable.getSelectedRow());
            totalValue();

        } else {
            JOptionPane.showMessageDialog(null, "il vaut selectionner un linge pour effacer list");
        }   // TODO add your handling code here:
    }//GEN-LAST:event_btnModifierActionPerformed

    private void btndeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteAllActionPerformed
        DefaultTableModel listSalles = (DefaultTableModel) salesTable.getModel();

        listSalles.setRowCount(0);
        // txtTotal.setText("");
        loadSearchDataProduct("");
        totalValue();    // TODO add your handling code here:
    }//GEN-LAST:event_btndeleteAllActionPerformed

    private void btnDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteItemActionPerformed

        if (salesTable.getSelectedRow() >= 0) {
            DefaultTableModel listSalles = (DefaultTableModel) salesTable.getModel();
            setProductTable();
//            loadSearchDataProduct("");
            listSalles.removeRow(salesTable.getSelectedRow());
            totalValue();
        } else {

            JOptionPane.showMessageDialog(null, "il vaut selectionner un linge pour effacer list");
        }    // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteItemActionPerformed

    private void btnSalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalleActionPerformed
        String operation = null;
        Double total = Double.valueOf(txtTotal.getText());
        Double recu = Double.valueOf(txtRecu.getText());
        operation = operationType.getSelectedItem().toString();
        if (null == operation) {
        } else
            switch (operation) {
                case "Cash": {

                    if (!txtRecu.getText().equals("") && !txtRecu.getText().equals("0") && recu >= total) {
                        moneyToCaisse = moneyToCaisse + Double.valueOf(txtTotal.getText());
                        try {
                            selleOrloanProduct(false);
                        } catch (URISyntaxException ex) {
                            Logger.getLogger(SallePage.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(SallePage.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    } else {
                        JOptionPane.showMessageDialog(this,
                                "il vaut rmeplie le montent recu "
                                + "pour et le montent doit \n"
                                + "etre superaire ou egal"
                                + " le montent total terminer "
                                + " l'operation.");
                        txtRecu.requestFocus();

                        txtRecu.setSelectionStart(0);
                        txtRecu.setSelectionEnd(txtRecu.getText().length());
                    }

                    break;
                }
                // TODO add your handling code here:
                case "A Terme": {
                    if ((txtRecu.getText().equals("0") || recu < total) && canLoan()) {

                        try {
                            selleOrloanProduct(true);
                        } catch (URISyntaxException ex) {
                            Logger.getLogger(SallePage.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(SallePage.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    } else {
                        JOptionPane.showMessageDialog(this,
                                " le montent doit \n"
                                + "etre inferieur a \n"
                                + " le montent total ou egal\n zero ou le client inconue ne peux pas emprete les produit pour terminer "
                                + " l'operation A terme.");
                        txtRecu.requestFocus();

                        txtRecu.setSelectionStart(0);
                        txtRecu.setSelectionEnd(txtRecu.getText().length());
                    }

                    break;
                }
                case "Devis": {
                    if (total > 0) {
                        DefaultTableModel listSalles = (DefaultTableModel) salesTable.getModel();

                        try {
                            if (TVA.isSelected()) {
                                devisProduct(true, true);
                            } else {
                                devisProduct(true, false);
                            }

                        } catch (URISyntaxException ex) {
                            Logger.getLogger(SallePage.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(SallePage.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        listSalles.setRowCount(0);
                        clear3();
                    } else {
                        JOptionPane.showMessageDialog(this,
                                "il vaut rmeplie le montent recu "
                                + "pour et le montent doit \n"
                                + "etre superaire ou egal"
                                + " le montent total terminer "
                                + " l'operation.");
                        txtRecu.requestFocus();

                        txtRecu.setSelectionStart(0);
                        txtRecu.setSelectionEnd(txtRecu.getText().length());
                    }

                    break;
                }
                default:
                    JOptionPane.showMessageDialog(this,
                            "il vaut choisir le type de vente ou le type d'operation vende en cash ou mise en terme pour terminer l'operation.");
                    break;
            }
    }//GEN-LAST:event_btnSalleActionPerformed

    private void btnCaisseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaisseActionPerformed
        if (moneyToCaisse > 0.0) {
            putMoneyInCaisse();
            moneyToCaisse = 0.0;
            new DashboardSalle(this.username, "Bien Venu").setVisible(true);
            this.dispose();
        } else {
            new DashboardSalle(this.username, "Bien Venu").setVisible(true);
            this.dispose();
        }

// TODO add your handling code here:
    }//GEN-LAST:event_btnCaisseActionPerformed

    private void btnSalle2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalle2ActionPerformed
        putMoneyInCaisse();
        moneyToCaisse = 0.0;
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalle2ActionPerformed

    private void addCustButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustButtonActionPerformed
        new Clientform(false, true, null);
        // TODO add your handling code here:
    }//GEN-LAST:event_addCustButtonActionPerformed

    private void btnEntrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrerActionPerformed
        if (custCodeText.getText().equals("") || prodCodeText.getText().equals("")
                || jDateChooser1.getDate() == null || quantityText.getText().equals("")
                || priceText.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "il vaux remplis toute les champs.");
        } else {
            if (Double.parseDouble(quantityText.getText()) <= 0) {

                JOptionPane.showMessageDialog(null, "il vaut entrer valide qantite ");

            } else if (valideQuentite) {
                reduceQuentite();
                duplicateProduct();
                duplicateClient();

            } else {
                JOptionPane.showMessageDialog(null, "le quentite dans le stock est insifisent"
                        + "\n le stock du "
                        + currentStock);
            }

        }
        txtRecu.requestFocus();

        txtRecu.setSelectionStart(0);
        txtRecu.setSelectionEnd(txtRecu.getText().length());
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEntrerActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed

        clear();   // TODO add your handling code here:
    }//GEN-LAST:event_clearButtonActionPerformed

    private void custCodeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custCodeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custCodeTextActionPerformed

    private void prodCodeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodCodeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prodCodeTextActionPerformed

    private void quantityTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityTextKeyReleased
        validQuentite();     // TODO add your handling code here:
    }//GEN-LAST:event_quantityTextKeyReleased

    private void quantityTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityTextKeyTyped
//        char c = evt.getKeyChar();
//        if (!(Character.isDigit(c)) && !(c == KeyEvent.VK_BACK_SPACE) && !(c == KeyEvent.VK_ENTER)) {
//            JOptionPane.showMessageDialog(null, "il vaut entrer les nombre seulement", "Ilegal Input",
//                    JOptionPane.ERROR_MESSAGE);
//            evt.consume();
//        }  // TODO add your handling code here:
    }//GEN-LAST:event_quantityTextKeyTyped

    private void jTableClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientMouseClicked
        int row = jTableClient.getSelectedRow();
        int col = jTableClient.getColumnCount();

        Object[] data = new Object[col];
        for (int i = 0; i < col; i++) {
            data[i] = jTableClient.getValueAt(row, i);
        }
        custCodeText.setText(data[0].toString());

        quantityText.requestFocus();
        quantityText.setSelectionStart(0);
        quantityText.setSelectionEnd(txtRecu.getText().length());

        // TODO add your handling code here:
    }//GEN-LAST:event_jTableClientMouseClicked

    private void txtClientFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtClientFocusGained
        txtClient.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClientFocusGained

    private void txtClientFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtClientFocusLost
        txtClient.setText("Chercher un Client qui va acheter le produit");
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClientFocusLost

    private void txtClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClientActionPerformed

    private void txtClientKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClientKeyReleased
        String text = txtClient.getText();
        loadSearchDataClient(text);
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClientKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuLogoutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuLogoutActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void infoAplikasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoAplikasiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_infoAplikasiActionPerformed

    private void quantityTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTextActionPerformed

    private void txtProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductKeyReleased

        String text = txtProduct.getText();
        loadSearchDataProduct(text);
// TODO add your handling code here:
    }//GEN-LAST:event_txtProductKeyReleased

    private void txtProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductActionPerformed

    private void txtProductFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProductFocusLost
        txtProduct.setText("Chercher un produit pour vender");
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductFocusLost

    private void txtProductFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProductFocusGained
        txtProduct.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductFocusGained

    private void jTableProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProductMouseClicked
        int row = jTableProduct.getSelectedRow();
        int col = jTableProduct.getColumnCount();
        DefaultTableModel listSalles = (DefaultTableModel) jTableProduct.getModel();

        Object[] data = new Object[col];
        for (int i = 0; i < col; i++) {
            data[i] = jTableProduct.getValueAt(row, i);
        }
        prodNameText.setText(data[1].toString());
        prodCodeText.setText(data[0].toString());
        priceText.setText(data[2].toString());
        validQuentite();
        priceText.requestFocus();

        priceText.setSelectionStart(0);
        priceText.setSelectionEnd(priceText.getText().length());
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableProductMouseClicked

    private void operationTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operationTypeActionPerformed
        String operation = operationType.getSelectedItem().toString();
//dans le cas cash et aterme on vas lesser le bouton cliquable est pour lesse le vendeur bien cliquer
//sur le type d'operation
        switch (operation) {
            case "Cash": {
                btnSalle.setEnabled(true);

                break;
            }
            case "Devis": {
                btnSalle.setEnabled(true);

                break;
            }
            // TODO add your handling code here:
            case "A Terme": {
                btnSalle.setEnabled(true);
                break;
            }
            default:
                btnSalle.setEnabled(false);

                break;
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_operationTypeActionPerformed

    private void prodNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prodNameTextActionPerformed

    private void TVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TVAActionPerformed
        totalValue();        // TODO add your handling code here:
    }//GEN-LAST:event_TVAActionPerformed

    private void priceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTextActionPerformed

    private void priceTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTextKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c)) && !(c == KeyEvent.VK_BACK_SPACE)) {
            JOptionPane.showMessageDialog(null, "il vaut entrer les nombre seulement", "Ilegal Input",
                    JOptionPane.ERROR_MESSAGE);
            evt.consume();
        }       // TODO add your handling code here:
    }//GEN-LAST:event_priceTextKeyTyped

    private void btnEntrerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnEntrerKeyPressed

    }//GEN-LAST:event_btnEntrerKeyPressed

    private void quantityTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityTextKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                ActionEvent et = null;
                if (custCodeText.getText().equals("") || prodCodeText.getText().equals("")
                        || jDateChooser1.getDate() == null || quantityText.getText().equals("")
                        || priceText.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "il vaux remplis toute les champs.");
                } else {
                    if (Double.parseDouble(quantityText.getText()) <= 0) {

                        JOptionPane.showMessageDialog(null, "il vaut entrer valide qantite ");

                    } else if (valideQuentite) {
                        reduceQuentite();
                        duplicateProduct();
                        duplicateClient();

                    } else {
                        JOptionPane.showMessageDialog(null, "le quentite dans le stock est insifisent"
                                + "\n le stock du "
                                + currentStock);
                    }

                }

            }
        } catch (Exception ex) {
            System.out.println(ex);
        }        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTextKeyPressed

    private void jTableProductMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProductMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableProductMouseEntered

    public void loadSearchDataClient(String text) {

        jTableClient.setModel(cltb.generateTable(text));

    }
//au moment click entre dans il vas entres le formulaire d'acht dans le table du vende

    void pushDataSalle() {
        DefaultTableModel listSalles = (DefaultTableModel) salesTable.getModel();
        Object[] rows = {
            custCodeText.getText(), prodCodeText.getText(), priceText.getText(),
            quantityText.getText(), prodNameText.getText()
        };

        String[] columns = {"nom", "prenom", "nomProd", "quentite"};

        listSalles.addRow(rows);
    }

//cette fonction regarde si le client est conue dans le base de donnee si connue il vas bnefice  de vende en terme
//est encore enregistrer son nom avec le produit acheter
    public void isKnowedCLient() {
        boolean canLoan = new UserDAO().canLoan(this.username.toLowerCase());
        Object[] items
                = {
                    new ComboItem("Choisir type operation"),
                    new ComboItem("Cash"), new ComboItem("Devis"),
                    new ComboItem("A Terme", canLoan),};

        if (clientKnow.isSelected()) {
            loadSearchDataClient("");
            txtClient.setEnabled(true);
            custCodeText.setText("");
            // btnLouee.setEnabled(true);
            clientUnKnow.setSelected(false);
            TVA.setEnabled(true);

            operationType.setModel(
                    new javax.swing.DefaultComboBoxModel(items));

            operationType.addActionListener(new ComboListener(operationType));
        } else {
            TVA.setEnabled(false);
            TVA.setSelected(false);

            txtClient.setEnabled(false);
            custCodeText.setText("inconue");
            clientUnKnow.setEnabled(true);
            clientUnKnow.setSelected(true);
            DefaultTableModel listClients = (DefaultTableModel) jTableClient.getModel();

            listClients.setRowCount(0);
        }

    }
//cette fonction regarde si le client est inconue dans le base de donnee si inconnue il ne peut pas bnefice  de vende en terme
//est encore enregistrer son nom inconue avec le produit acheter

    public void isUNKnowedCLient() {
        Object[] items2
                = {
                    new ComboItem("Choisir type operation"),
                    new ComboItem("Cash"), new ComboItem("Devis", false),
                    new ComboItem("A Terme", false),};
        if (clientUnKnow.isSelected()) {
            DefaultTableModel listClients = (DefaultTableModel) jTableClient.getModel();
            TVA.setEnabled(false);
            TVA.setSelected(false);

            listClients.setRowCount(0);
            txtClient.setEnabled(false);
            custCodeText.setText("inconue");
            operationType.setModel(
                    new javax.swing.DefaultComboBoxModel(items2));

            operationType.addActionListener(new ComboListener(operationType));
            clientKnow.setSelected(false);
        } else {
            TVA.setEnabled(true);

            txtClient.setEnabled(true);

            custCodeText.setText("");
            clientKnow.setEnabled(true);
            clientKnow.setSelected(true);

            loadSearchDataClient("");

        }
    }
//afficher les information du produit chercher

    public void loadSearchDataProduct(String text) {

        jTableProduct.setModel(prtbl.generateTable2(text));

    }

    private String getCurrentDate() {
        DateFormat dateFormat = new SimpleDateFormat("HH:MM:SS dd-MM-yyyy");
        Date dates = new Date();
        Calendar date = new GregorianCalendar();
        String dat = date.get(Calendar.HOUR_OF_DAY) + ":" + date.get(Calendar.MINUTE) + ":" + date.get(Calendar.SECOND)
                + " \t" + date.get(Calendar.DATE) + "/" + String.valueOf(date.get(Calendar.MONTH) + 1) + "/"
                + date.get(Calendar.YEAR);
        dateFormat.format(dates);
        return dat;
    }
//cette foncton prend comme input date puis trencever vers string

    private String stringToDaTe(Date s) {

        DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        Date date = null;

        return formatter.format(s);
    }

    private String getCureentTime() {
//        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date dates = new Date();

        return dateFormat.format(dates);

    }

    public void clear() {

        custCodeText.setText("");
        prodCodeText.setText("");
        isKnowedCLient();
        isUNKnowedCLient();
        jDateChooser1.setDate(dates);
        priceText.setText("");
        quantityText.setText("1");
    }
//pour initialise le champ du formulaire

    public void clear2() {

        prodCodeText.setText("");

        jDateChooser1.setDate(dates);
        priceText.setText("");
        quantityText.setText("1");
    }
//pour initialise le champ du vente

    public void clear3() {

        txtRendre.setText("0");

        txtTotal.setText("0");
        txtRecu.setText("0");
        btnSalle.setEnabled(false);

    }
//cette fonction afficher ou calcler le motent qui doit payer en ajoutent tout les line du tableau du vende quentite*prix de vete

    void totalValue() {

        Utils.totalValue((DefaultTableModel) salesTable.getModel(), TVA, txtTotal, salesTable);

    }
//cette fonction regarder si le table contient le nom inconue est retourner si exite ou non 

    public boolean canLoan() {
        DefaultTableModel listSalles = (DefaultTableModel) salesTable.getModel();
        String client = "inconue";
        for (int i = 0; i < listSalles.getRowCount(); i++) {
            String client1 = listSalles.getValueAt(i, 0).toString();

            if (client.equals(client1)) {

                return false;
            }
        }
        return true;
    }
//    cette fonction regade si le client est repeter plusaire fois dans le tbale d vende est piur ne vender 
//    produit pour deuxc client divernet

    void duplicateClient() {
        DefaultTableModel listSalles = (DefaultTableModel) salesTable.getModel();

        String codeClient1;
        String codeClient2 = custCodeText.getText();
        if (listSalles.getRowCount() != 0) {

            codeClient1 = listSalles.getValueAt(0, 0).toString();

            if (codeClient1.equals(codeClient2)) {
                pushDataSalle();
                clear2();
                totalValue();
            } else {
                JOptionPane.showMessageDialog(null, "tu peux pas ajouter deux client diferent  "
                        + "\n dans le table du vente il veut entre le client => " + codeClient1 + " \nle client "
                        + "entrer est " + codeClient2);

            }
        } else {
            pushDataSalle();
            clear2();
            totalValue();

        }
    }
//cette fonction pour voire si le produit est trouver le table du vente puis augmenter le quentite est n'est
//    pas ajouter autre line dans le table est encore pour ne pas instrer plusaire table dans le base de donner

    void duplicateProduct() {
        DefaultTableModel listSalles = (DefaultTableModel) salesTable.getModel();
        double quant1 = 0;
        double quant2 = Double.parseDouble(quantityText.getText());
        String codeProd1 = null;
        String codeProd2 = prodCodeText.getText();
        if (listSalles.getRowCount() > 0) {

            for (int i = 0; i < listSalles.getRowCount(); i++) {
                codeProd1 = listSalles.getValueAt(i, 1).toString();

                if (codeProd1.equals(codeProd2)) {
                    quant1 = Double.parseDouble(listSalles.getValueAt(i, 3).toString());
                    quant1 = quant1 + quant2;
                    listSalles.setValueAt(quant1, i, 3);
                    listSalles.setValueAt(priceText.getText(), i, 2);
                    clear2();
                    totalValue();
//                    evry time you delete the last row if you insert new rows it will add empty one in the last place 
//it the table so you have to dleete it evry time you insert duplicate rows 
                    listSalles.removeRow(listSalles.getRowCount() + 1);
//

                }

            }
//            clearEmpty();
        }

    }

    public void clearEmpty() {
        DefaultTableModel listSalles = (DefaultTableModel) salesTable.getModel();
         String codeProd1;
        String codeProd2 = null;
        if (listSalles.getRowCount() > 0) {

            for (int i = 0; i < listSalles.getRowCount(); i++) {
                codeProd1 = listSalles.getValueAt(i, 1).toString();

                if (codeProd1.equals(codeProd2)) {
                    salesTable.setSelectionBackground(Color.green);
                    listSalles.removeRow(i + 1);
                }

            }
        }
    }

//cette fonction reduire le quentite si le bouton entre dans cliquer pour ne pas entre des quentite qui
//pas dans la base de donner 
    void reduceQuentite() {

        DefaultTableModel listSalles = (DefaultTableModel) jTableProduct.getModel();
        String codeProd1;
        double quent1;
        double quent2 = Double.parseDouble(quantityText.getText());
        String codeProd2 = prodCodeText.getText();

        if (listSalles.getRowCount() > 0) {
            for (int i = 0; i < listSalles.getRowCount(); i++) {
                codeProd1 = listSalles.getValueAt(i, 0).toString();
                quent1 = Double.parseDouble(listSalles.getValueAt(i, 3).toString());

                if (codeProd2.equals(codeProd1)) {
                    listSalles.setValueAt(quent1 - quent2, i, 3);

                }
            }
        }
    }
//cette fonction verifier que le quentite dans le base de donne est bien sufisent pour le vender 

    private void validQuentite() {

        DefaultTableModel listSalles = (DefaultTableModel) jTableProduct.getModel();

        double quent1;
        String quent = quantityText.getText();

        double quent2 = Double.parseDouble(quent);

        String codeProd2 = prodCodeText.getText();
        if (Double.parseDouble(quantityText.getText()) <= 0) {
            quantityText.setText("");
            JOptionPane.showMessageDialog(null, "il vaut entrer valide qantite ");

        } else if (!prodCodeText.getText().equals("") && jTableProduct.getSelectedRow() >= 0) {

            String codeProd1 = listSalles.getValueAt(jTableProduct.getSelectedRow(), 0).toString();
            quent1 = Double.parseDouble(listSalles.getValueAt(jTableProduct.getSelectedRow(), 3).toString());
            currentStock = quent1;

            if (codeProd1.equals(codeProd2)) {

                if (quent2 <= quent1) {
                    valideQuentite = true;

                } else {
                    JOptionPane.showMessageDialog(null, "le quentite dans le stock est insifisent \n le stock du "
                            + prodCodeText.getText() + " est " + quent1);
                    quantityText.setText("");
                }
            }

        }

    }
//cette fonction est pour modifier le table du produit si le boutton suprimer un line ou modifier 
//est changer le quentite pour ne ne pas etre confronte les quentite

    public void setProductTable() {
        DefaultTableModel listSalles = (DefaultTableModel) jTableProduct.getModel();
        DefaultTableModel listSalles2 = (DefaultTableModel) salesTable.getModel();

        String codeProd1;
        double quent1;

        double quent2 = Double.parseDouble(listSalles2.getValueAt(salesTable.getSelectedRow(), 3).toString());

        String codeProd2 = listSalles2.getValueAt(salesTable.getSelectedRow(), 1).toString();

        for (int i = 0; i < listSalles.getRowCount(); i++) {
            codeProd1 = listSalles.getValueAt(i, 0).toString();
            quent1 = Double.parseDouble(listSalles.getValueAt(i, 3).toString());

            if (codeProd2.equals(codeProd1)) {

                listSalles.setValueAt(quent1 + quent2, i, 3);

            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SallePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SallePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SallePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SallePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SallePage("deidine").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox TVA;
    private javax.swing.JButton addCustButton;
    private javax.swing.JButton btnCaisse;
    private javax.swing.JButton btnDeleteItem;
    private javax.swing.JButton btnEntrer;
    private javax.swing.JButton btnModifier;
    private javax.swing.JButton btnSalle;
    private javax.swing.JButton btnSalle2;
    private javax.swing.JButton btndeleteAll;
    private javax.swing.JButton clearButton;
    private javax.swing.JCheckBox clientKnow;
    private javax.swing.JCheckBox clientUnKnow;
    private javax.swing.JTextField custCodeText;
    private javax.swing.JMenuItem infoAplikasi;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelListSalle;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBarInfoPengembang;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuLogout;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPaneKasirBarang;
    private javax.swing.JScrollPane jScrollPaneKasirBarang1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableClient;
    private javax.swing.JTable jTableProduct;
    private javax.swing.JComboBox<String> operationType;
    private javax.swing.JTextField priceText;
    private javax.swing.JTextField prodCodeText;
    private javax.swing.JTextField prodNameText;
    private javax.swing.JTextField quantityText;
    private javax.swing.JTable salesTable;
    private javax.swing.JPanel sellPanel;
    private javax.swing.JTextField txtClient;
    private javax.swing.JTextField txtProduct;
    private javax.swing.JTextField txtRecu;
    private javax.swing.JTextField txtRendre;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JLabel vendeur;
    // End of variables declaration//GEN-END:variables

//   cette fonction pour l'operation vender ou loue il prent input si loue est true ou  false
//    
    void putMoneyInCaisse() {
        if (moneyToCaisse > 0.0) {
            new ProductDAO().putInCaisse(getCureentTime(), moneyToCaisse, this.username);
        } else {
            JOptionPane.showMessageDialog(null, "il y'as aucun vente dans cette session !");

        }
    }

    public void selleOrloanProduct(boolean isLoan) throws URISyntaxException, InterruptedException {
        DefaultTableModel listSalles = (DefaultTableModel) salesTable.getModel();
        boolean tva = false;
        if (TVA.isSelected()) {
            tva = true;
        }
        if (listSalles.getRowCount() != 0) {
            ProductDTO productDTO = new ProductDTO();
            ProductDTO productDTO2 = new ProductDTO();
            Double totalPaye = 0.0;
            productDTO.setDate(getCureentTime());
            productDTO.setCustCode(custCodeText.getText());
            productDTO.setProdCode(prodCodeText.getText());
            productDTO.setTotalRcue(Double.parseDouble(txtRecu.getText()));
            productDTO.setTotalPayee(Double.parseDouble(txtTotal.getText()));
            productDTO.setTotalChange(Double.parseDouble(txtRendre.getText()));

            new ProductDAO().sellProductDAO(productDTO, this.username, isLoan, tva);
            int id = new ProductDAO().idSalle();
            productDTO2.setSalleID(id);
            productDTO.setSalleID(id);
            for (int i = 0; i < listSalles.getRowCount(); i++) {

                productDTO2.setDate(listSalles.getValueAt(i, 4).toString());
                productDTO2.setCustCode(listSalles.getValueAt(i, 0).toString());
                productDTO2.setProdCode(listSalles.getValueAt(i, 1).toString());

                productDTO2.setQuantity(Double.parseDouble(listSalles.getValueAt(i, 3).toString()));
                productDTO2.setSellPrice(Double.parseDouble(listSalles.getValueAt(i, 2).toString()));
                new ProductDAO().sellDetailProductDAO(productDTO2, id);
            }
            saveFile();
            listSalles.setRowCount(0);
            clear3();

        } else {
            JOptionPane.showMessageDialog(this, "Le Table est null.");

        }
        isKnowedCLient();
        isUNKnowedCLient();

    }

    public void devisProduct(boolean isLoan, boolean isTva) throws URISyntaxException, InterruptedException {
        DefaultTableModel listSalles = (DefaultTableModel) salesTable.getModel();
        if (listSalles.getRowCount() != 0) {
            ProductDTO productDTO = new ProductDTO();
            ProductDTO productDTO2 = new ProductDTO();
            Double totalPaye = 0.0;

            productDTO.setDate(getCureentTime());
            productDTO.setCustCode(custCodeText.getText());
            productDTO.setProdCode(prodCodeText.getText());
            productDTO.setTotalRcue(Double.parseDouble(txtRecu.getText()));
            productDTO.setTotalPayee(Double.parseDouble(txtTotal.getText()));
            productDTO.setTotalChange(Double.parseDouble(txtRendre.getText()));

            new ProductDAO().sellDevisProductDAO(productDTO, this.username, isLoan, isTva);
            int id = new ProductDAO().idDevisSalle();
            productDTO2.setSalleID(id);
            productDTO.setSalleID(id);
            for (int i = 0; i < listSalles.getRowCount(); i++) {

                productDTO2.setDate(listSalles.getValueAt(i, 4).toString());
                productDTO2.setCustCode(listSalles.getValueAt(i, 0).toString());
                productDTO2.setProdCode(listSalles.getValueAt(i, 1).toString());
                productDTO2.setSellPrice(Double.parseDouble(listSalles.getValueAt(i, 2).toString()));

                productDTO2.setQuantity(Double.parseDouble(listSalles.getValueAt(i, 3).toString()));
                new ProductDAO().sellDevisDetailProductDAO(productDTO2, id);
            }
            new ProductDAO().report(id);
//            JOptionPane.showMessageDialog(null, "le vende est terminer  pour le client." + productDTO.getCustCode() + " par le vendeur " + username + " bonjournee");
            saveFile();
            listSalles.setRowCount(0);
            clear3();

        } else {
            JOptionPane.showMessageDialog(this, "Le Table est null.");

        }
        isKnowedCLient();
        isUNKnowedCLient();

    }

    public void saveFile() throws URISyntaxException, InterruptedException {

        try {
            if (isCustomerInconu(custCodeText.getText())) {
                PDFSalleNoTVA.inBaoCao(new File("deidine.pdf"), getCureentTime(), operationType.getSelectedItem().toString(), (DefaultTableModel) salesTable.getModel(),
                        getCustomerInfo(custCodeText.getText()), txtRecu.getText(), txtRendre.getText(), txtTotal.getText());

            } else {

                if (TVA.isSelected()) {
                    PDFSalleTVA.inBaoCao(new File("deidine.pdf"), getCureentTime(), operationType.getSelectedItem().toString(), (DefaultTableModel) salesTable.getModel(),
                            getCustomerInfo(custCodeText.getText()), txtRecu.getText(), txtRendre.getText(), txtTotal.getText(), true,null);

                } else {
                    PDFSalleTVA.inBaoCao(new File("deidine.pdf"), getCureentTime(), operationType.getSelectedItem().toString(), (DefaultTableModel) salesTable.getModel(),
                            getCustomerInfo(custCodeText.getText()), txtRecu.getText(), txtRendre.getText(), txtTotal.getText(), false,null);

                }
            }
        } catch (DocumentException ex) {
            Logger.getLogger(DataDetail.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(DataDetail.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
        }
    }

    public String getCustomerInfo(String code) {
        if (code.equals("inconue")) {
            return "inconue";
        }
        DefaultTableModel listCusts = (DefaultTableModel) jTableClient.getModel();
        for (int i = 0; i < listCusts.getRowCount(); i++) {
            String codeTab = listCusts.getValueAt(i, 0).toString();

            if (codeTab.equals(code)) {
                return listCusts.getValueAt(i, 1).toString() + " TELEPHONE: " + listCusts.getValueAt(i, 3).toString();
            }

        }
        return null;
    }

    public boolean isCustomerInconu(String code) {
        if (code.equals("inconue")) {
            return true;
        }
        DefaultTableModel listCusts = (DefaultTableModel) jTableClient.getModel();
        for (int i = 0; i < listCusts.getRowCount(); i++) {
            String codeTab = listCusts.getValueAt(i, 0).toString();

            if (codeTab.equals(code)) {
                return false;
            }

        }
        return true;
    }

}
